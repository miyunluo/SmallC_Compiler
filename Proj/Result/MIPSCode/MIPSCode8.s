.data
temp: .space 544
var0: .space 4000
var1: .space 4

.text
__printf_one:
li $v0, 1
syscall
jr $ra
__scanf_one:
li $v0,5
syscall
jr $ra

__divide:
add $12, $29, 0
add $13, $29, 4
add $14, $29, -276
move $15, $14
lw $11, 8($a3)
move $14, $11
move $16, $12
lw $16, 0($16)
mul $17, $16, 4
add $14, $14, $17
lw $14, 0($14)
sw $14, 0($15)
move $14, $12
lw $14, 0($14)
move $16, $13
lw $16, 0($16)
sub $16, $14, $16
li $14, 1
bnez $16, l3
li $14, 0
l3:
beqz $14, l2
l0:
move $14, $12
lw $14, 0($14)
move $16, $13
lw $16, 0($16)
sub $16, $14, $16
li $14, 1
bltz $16, l7
li $14, 0
l7:
move $16, $11
move $17, $13
lw $17, 0($17)
mul $18, $17, 4
add $16, $16, $18
lw $16, 0($16)
move $17, $15
lw $17, 0($17)
sub $17, $16, $17
li $16, 1
bgez $17, l8
li $16, 0
l8:
and $16, $14, $16
li $14, 1
bnez $16, l9
li $14, 0
l9:
beqz $14, l6
l4:
move $14, $13
move $16, $14
lw $14, 0($14)
add $14, $14, -1
sw $14, 0($16)
l5:
move $14, $12
lw $14, 0($14)
move $16, $13
lw $16, 0($16)
sub $16, $14, $16
li $14, 1
bltz $16, l10
li $14, 0
l10:
move $16, $11
move $17, $13
lw $17, 0($17)
mul $18, $17, 4
add $16, $16, $18
lw $16, 0($16)
move $17, $15
lw $17, 0($17)
sub $17, $16, $17
li $16, 1
bgez $17, l11
li $16, 0
l11:
and $16, $14, $16
li $14, 1
bnez $16, l12
li $14, 0
l12:
bnez $14, l4
l6:
move $14, $12
lw $14, 0($14)
move $16, $13
lw $16, 0($16)
sub $16, $14, $16
li $14, 1
bltz $16, l15
li $14, 0
l15:
beqz $14, l13
move $14, $11
move $16, $12
lw $16, 0($16)
mul $17, $16, 4
add $14, $14, $17
move $16, $11
move $17, $13
lw $17, 0($17)
mul $18, $17, 4
add $16, $16, $18
lw $16, 0($16)
sw $16, 0($14)
move $14, $12
move $16, $14
lw $14, 0($14)
add $14, $14, 1
sw $14, 0($16)
j l14
l13:
l14:
move $14, $12
lw $14, 0($14)
move $16, $13
lw $16, 0($16)
sub $16, $14, $16
li $14, 1
bltz $16, l19
li $14, 0
l19:
move $16, $11
move $17, $12
lw $17, 0($17)
mul $18, $17, 4
add $16, $16, $18
lw $16, 0($16)
move $17, $15
lw $17, 0($17)
sub $17, $16, $17
li $16, 1
blez $17, l20
li $16, 0
l20:
and $16, $14, $16
li $14, 1
bnez $16, l21
li $14, 0
l21:
beqz $14, l18
l16:
move $14, $12
move $16, $14
lw $14, 0($14)
add $14, $14, 1
sw $14, 0($16)
l17:
move $14, $12
lw $14, 0($14)
move $16, $13
lw $16, 0($16)
sub $16, $14, $16
li $14, 1
bltz $16, l22
li $14, 0
l22:
move $16, $11
move $17, $12
lw $17, 0($17)
mul $18, $17, 4
add $16, $16, $18
lw $16, 0($16)
move $17, $15
lw $17, 0($17)
sub $17, $16, $17
li $16, 1
blez $17, l23
li $16, 0
l23:
and $16, $14, $16
li $14, 1
bnez $16, l24
li $14, 0
l24:
bnez $14, l16
l18:
move $14, $12
lw $14, 0($14)
move $16, $13
lw $16, 0($16)
sub $16, $14, $16
li $14, 1
bltz $16, l27
li $14, 0
l27:
beqz $14, l25
move $14, $11
move $16, $13
lw $16, 0($16)
mul $17, $16, 4
add $14, $14, $17
move $16, $11
move $17, $12
lw $17, 0($17)
mul $18, $17, 4
add $16, $16, $18
lw $16, 0($16)
sw $16, 0($14)
move $14, $13
move $16, $14
lw $14, 0($14)
add $14, $14, -1
sw $14, 0($16)
j l26
l25:
l26:
l1:
move $14, $12
lw $14, 0($14)
move $16, $13
lw $16, 0($16)
sub $16, $14, $16
li $14, 1
bnez $16, l28
li $14, 0
l28:
bnez $14, l0
l2:
move $13, $11
move $11, $12
lw $11, 0($11)
mul $14, $11, 4
add $13, $13, $14
move $11, $15
lw $11, 0($11)
sw $11, 0($13)
move $11, $12
add $12, $29, 12
lw $11, 0($11)
sw $11, 0($12)
jr $ra
jr $ra
__qsort:
add $11, $29, 0
add $12, $29, 4
add $13, $29, -128
move $14, $13
move $13, $11
lw $13, 0($13)
move $15, $12
lw $15, 0($15)
sub $15, $13, $15
li $13, 1
bgez $15, l31
li $13, 0
l31:
beqz $13, l29
li $13, 0
add $15, $29, 12
sw $13, 0($15)
jr $ra
j l30
l29:
l30:
move $13, $14
sw $31, -136($29)
move $15, $12
add $16, $29, -140
lw $15, 0($15)
sw $15, 0($16)
move $15, $11
add $16, $29, -144
lw $15, 0($15)
sw $15, 0($16)
add $29, $29, -144
sw $11, 140($sp)
sw $12, 136($sp)
sw $13, 108($sp)
sw $14, 132($sp)
jal __divide
lw $11, 140($sp)
lw $12, 136($sp)
lw $13, 108($sp)
lw $14, 132($sp)
sub $29, $29, -144
lw $31, -136($29)
add $15, $29, -132
move $16, $15
lw $16, 0($16)
sw $16, 0($13)
sw $31, -136($29)
move $13, $14
lw $13, 0($13)
sub $13, $13, 1
add $15, $29, -140
sw $13, 0($15)
move $13, $11
add $11, $29, -144
lw $13, 0($13)
sw $13, 0($11)
add $29, $29, -144
sw $12, 136($sp)
sw $14, 132($sp)
jal __qsort
lw $12, 136($sp)
lw $14, 132($sp)
sub $29, $29, -144
lw $31, -136($29)
add $11, $29, -132
move $13, $11
sw $31, -136($29)
move $11, $12
add $12, $29, -140
lw $11, 0($11)
sw $11, 0($12)
move $11, $14
lw $11, 0($11)
add $11, $11, 1
add $12, $29, -144
sw $11, 0($12)
add $29, $29, -144
jal __qsort
sub $29, $29, -144
lw $31, -136($29)
add $11, $29, -132
move $12, $11
li $11, 0
add $12, $29, 12
sw $11, 0($12)
jr $ra
jr $ra
main:
la $a3, temp
la $t0, var0
sw $t0, 8($a3)
la $t0, var1
sw $t0, 12($a3)
add $11, $29, -136
move $15, $11
lw $13, 12($a3)
move $11, $13
jal __scanf_one
sw $2, 0($11)
move $11, $15
li $16, 0
sw $16, 0($11)
move $16, $15
lw $16, 0($16)
move $17, $13
lw $17, 0($17)
sub $17, $16, $17
li $16, 1
bltz $17, l35
li $16, 0
l35:
beqz $16, l34
l32:
lw $14, 8($a3)
move $16, $14
move $17, $15
lw $17, 0($17)
mul $18, $17, 4
add $16, $16, $18
jal __scanf_one
sw $2, 0($16)
l33:
move $11, $15
move $16, $11
lw $11, 0($11)
add $11, $11, 1
sw $11, 0($16)
move $11, $15
lw $11, 0($11)
move $16, $13
lw $16, 0($16)
sub $16, $11, $16
li $11, 1
bltz $16, l36
li $11, 0
l36:
bnez $11, l32
l34:
move $11, $13
lw $11, 0($11)
sub $11, $11, 1
add $12, $29, -148
sw $11, 0($12)
li $11, 0
add $12, $29, -152
sw $11, 0($12)
add $29, $29, -152
sw $13, 12($a3)
sw $14, 8($a3)
sw $15, 148($sp)
jal __qsort
lw $13, 12($a3)
lw $14, 8($a3)
lw $15, 148($sp)
sub $29, $29, -152
add $11, $29, -140
move $12, $11
move $11, $13
lw $11, 0($11)
move $4, $11
jal __printf_one
move $11, $15
li $12, 0
sw $12, 0($11)
move $12, $15
lw $12, 0($12)
move $16, $13
lw $16, 0($16)
sub $16, $12, $16
li $12, 1
bltz $16, l40
li $12, 0
l40:
beqz $12, l39
l37:
move $12, $14
move $16, $15
lw $16, 0($16)
mul $17, $16, 4
add $12, $12, $17
lw $12, 0($12)
move $4, $12
jal __printf_one
l38:
move $11, $15
move $12, $11
lw $11, 0($11)
add $11, $11, 1
sw $11, 0($12)
move $11, $15
lw $11, 0($11)
move $12, $13
lw $12, 0($12)
sub $12, $11, $12
li $11, 1
bltz $12, l41
li $11, 0
l41:
bnez $11, l37
l39:
li $11, 0
add $12, $29, 4
sw $11, 0($12)
j __program_end
j __program_end
__program_end:
li $v0, 10
syscall
